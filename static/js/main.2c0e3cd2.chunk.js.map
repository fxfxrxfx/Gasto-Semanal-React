{"version":3,"sources":["components/Header.js","components/Expense.js","components/List.js","components/Form.js","components/Budget.js","helper.js","components/Remaining.js","components/BudgetControl.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","titulo","Expense","_this$props$expense","this","expense","name","quantity","console","log","className","Component","List","_this","Object","keys","expenses","map","key","components_Expense","FormularioGasto","refExpenseName","React","createRef","refQuantity","createNewExpense","e","preventDefault","current","value","addExpense","currentTarget","reset","onSubmit","ref","type","placeholder","Budget","budget","validarPresupuesto","presupuesto","totalPresupuesto","parseInt","Remaining","restante","_this$props","remaining","BudgetControl","Fragment","components_Budget","components_Remaining","App","state","obtenerPresupuesto","prompt","setState","objectSpread","concat","Date","now","getRemaining","num","Number","total","components_Header","Form","components_List","components_BudgetControl","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gOAUeA,EARA,SAACC,GACZ,OACIC,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,UAAKH,EAAMI,UCaRC,mLAdH,IAAAC,EACqBC,KAAKP,MAAMQ,QAA7BC,EADHH,EACGG,KAAMC,EADTJ,EACSI,SAEb,OADAC,QAAQC,IAAIH,EAAMC,GAEdT,EAAAC,EAAAC,cAAA,MAAIU,UAAU,UACVZ,EAAAC,EAAAC,cAAA,SACKM,EACDR,EAAAC,EAAAC,cAAA,QAAMU,UAAU,SAAhB,MAA4BH,EAA5B,cAREI,aCiBPC,mLAfF,IAAAC,EAAAT,KACL,OACIN,EAAAC,EAAAC,cAAA,OAAKU,UAAU,qBACXZ,EAAAC,EAAAC,cAAA,qBACCc,OAAOC,KAAKX,KAAKP,MAAMmB,UAAUC,IAAI,SAAAC,GAAG,OACrCpB,EAAAC,EAAAC,cAACmB,EAAD,CACID,IAAKA,EACLb,QAASQ,EAAKhB,MAAMmB,SAASE,eATlCP,aC4CJS,6MA1CXC,eAAiBC,IAAMC,cACvBC,YAAcF,IAAMC,cAGpBE,iBAAmB,SAACC,GAEhBA,EAAEC,iBAGF,IAAMtB,EAAU,CACZC,KAAMO,EAAKQ,eAAeO,QAAQC,MAClCtB,SAAUM,EAAKW,YAAYI,QAAQC,OAGvCrB,QAAQC,IAAIJ,GAEZQ,EAAKhB,MAAMiC,WAAWzB,GAGtBqB,EAAEK,cAAcC,iFAIhB,OACIlC,EAAAC,EAAAC,cAAA,QAAMiC,SAAU7B,KAAKqB,kBACjB3B,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,OAAKU,UAAU,SACXZ,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SAAOkC,IAAK9B,KAAKiB,eAAgBX,UAAU,eAAeyB,KAAK,OAAOC,YAAY,oBAGtFtC,EAAAC,EAAAC,cAAA,OAAKU,UAAU,SACXZ,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOkC,IAAK9B,KAAKoB,YAAad,UAAU,eAAeyB,KAAK,OAAOC,YAAY,aAGnFtC,EAAAC,EAAAC,cAAA,SAAOU,UAAU,8BAA8ByB,KAAK,SAASN,MAAM,oBAvCrDlB,aCUf0B,mLARP,OACIvC,EAAAC,EAAAC,cAAA,OAAKU,UAAU,uBAAf,kBACoBN,KAAKP,MAAMyC,eAJtB3B,aCFR4B,EAAqB,SAAAC,GAC9B,IAAIC,EAAmBC,SAASF,EAAa,KAAM,EAEnD,OAAGC,EAAmB,GACXA,GCUAE,mLAVH,IDMuBH,EAAYI,ECNnCC,EACwBzC,KAAKP,MAA1BiD,EADHD,EACGC,UAAWR,EADdO,EACcP,OAClB,OACIxC,EAAAC,EAAAC,cAAA,OAAKU,WDGkB8B,ECHYF,EDGAM,ECHQE,EDM9CN,EAAc,EAAKI,EACZ,qBACAJ,EAAc,EAAKI,EACnB,sBAEA,8BCXJ,gBACkBxC,KAAKP,MAAMiD,kBALjBnC,aCiBToC,mLAdP,OACIjD,EAAAC,EAAAC,cAACF,EAAAC,EAAMiD,SAAP,KACIlD,EAAAC,EAAAC,cAACiD,EAAD,CACIX,OAAQlC,KAAKP,MAAMyC,SAEvBxC,EAAAC,EAAAC,cAACkD,EAAD,CACIZ,OAAQlC,KAAKP,MAAMyC,OACnBQ,UAAW1C,KAAKP,MAAMiD,oBATdnC,aC6EbwC,oNAvEbC,MAAQ,CACNd,OAAQ,GACRQ,UAAW,GACX9B,SAAU,MAIZqC,mBAAqB,WACnB,IAAIf,EAASgB,OAAO,kCACPf,EAAmBD,GAE9BzB,EAAK0C,SAAS,CAAEjB,SAASQ,UAAYR,IAErCzB,EAAKwC,wBASTvB,WAAa,SAAAzB,GAEX,IAAMW,EAAQF,OAAA0C,EAAA,EAAA1C,CAAA,GAAOD,EAAKuC,MAAMpC,UAEhCA,EAAQ,QAAAyC,OAASC,KAAKC,QAAWtD,EAEjCQ,EAAK+C,aAAavD,EAAQE,UAE1BM,EAAK0C,SAAS,CACVvC,gBAKN4C,aAAe,SAACrD,GAEd,IAAIsD,EAAMC,OAAOvD,GAGbwD,EAAQlD,EAAKuC,MAAMN,UAGvBiB,GAASF,EACThD,EAAK0C,SAAS,CAAET,UAAWiB,wFA3B3B3D,KAAKiD,sDA+BL,OACIvD,EAAAC,EAAAC,cAAA,OAAKU,UAAU,iBACbZ,EAAAC,EAAAC,cAACgE,EAAD,CAAQ/D,OAAO,kBACfH,EAAAC,EAAAC,cAAA,OAAKU,UAAU,iCACbZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,OACbZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,mBACbZ,EAAAC,EAAAC,cAACiE,EAAD,CAAMnC,WAAY1B,KAAK0B,cAEzBhC,EAAAC,EAAAC,cAAA,OAAKU,UAAU,mBACbZ,EAAAC,EAAAC,cAACkE,EAAD,CAAMlD,SAAUZ,KAAKgD,MAAMpC,WAC3BlB,EAAAC,EAAAC,cAACmE,EAAD,CACI7B,OAAUlC,KAAKgD,MAAMd,OACrBQ,UAAa1C,KAAKgD,MAAMN,uBA/D1BnC,cCIEyD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5E,EAAAC,EAAAC,cAAC2E,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.2c0e3cd2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <header>\r\n            <h1>{props.titulo}</h1>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass Expense extends Component {\r\n    render(){\r\n        const {name, quantity} = this.props.expense;\r\n        console.log(name, quantity);\r\n        return (\r\n            <li className=\"gastos\">\r\n                <p>\r\n                    {name}\r\n                    <span className=\"gasto\"> $ {quantity} </span>\r\n                </p>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Expense;","import React, { Component } from 'react';\r\nimport Expense from './Expense';\r\n\r\nclass List extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"gastos-realizados\">\r\n                <h2>Listado</h2>\r\n                {Object.keys(this.props.expenses).map(key => (\r\n                    <Expense\r\n                        key={key}\r\n                        expense={this.props.expenses[key]}\r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default List;","import React, { Component } from 'react';\r\n\r\nclass FormularioGasto extends Component {\r\n\r\n    //refs for form inputs\r\n    refExpenseName = React.createRef();\r\n    refQuantity = React.createRef();\r\n\r\n\r\n    createNewExpense = (e) => {\r\n        //Prevent default\r\n        e.preventDefault();\r\n\r\n        //Create object with expenses\r\n        const expense = {\r\n            name: this.refExpenseName.current.value,\r\n            quantity: this.refQuantity.current.value\r\n        };\r\n\r\n        console.log(expense);\r\n        //Add and send it\r\n        this.props.addExpense(expense);\r\n\r\n        //Reset\r\n        e.currentTarget.reset();\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <form onSubmit={this.createNewExpense}>\r\n                <h2>Agrega tus gastos aqui</h2>\r\n                <div className=\"campo\">\r\n                    <label>Nombre Gasto</label>\r\n                    <input ref={this.refExpenseName} className=\"u-full-width\" type=\"text\" placeholder=\"Ej. Transporte\" />\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Cantidad</label>\r\n                    <input ref={this.refQuantity} className=\"u-full-width\" type=\"text\" placeholder=\"Ej. 300\" />\r\n                </div>\r\n\r\n                <input className=\"button-primary u-full-width\" type=\"submit\" value=\"Agregar\" />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormularioGasto;","import React, { Component } from \"react\";\r\n\r\nclass Budget extends Component {\r\n    render(){\r\n        return (\r\n            <div className=\"alert alert-primary\">\r\n                Presupuesto: $ {this.props.budget}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Budget;","export const validarPresupuesto = presupuesto => {\r\n    let totalPresupuesto = parseInt(presupuesto, 10)|| 0;\r\n\r\n    if(totalPresupuesto > 0 ) {\r\n        return totalPresupuesto;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const revisarPresupuesto = (presupuesto,restante) => {\r\n    let clase;\r\n    // Comprobar el 25%\r\n    if( (presupuesto / 4) > restante) {\r\n        clase = 'alert alert-danger';\r\n    } else if( (presupuesto / 2) > restante) {\r\n        clase = 'alert alert-warning'\r\n    } else {\r\n        clase = 'alert alert alert-success';\r\n    }\r\n    return clase;\r\n}","import React, { Component } from \"react\";\r\nimport { revisarPresupuesto } from '../helper';\r\n\r\nclass Remaining extends Component {\r\n    render(){\r\n        const {remaining, budget} = this.props;\r\n        return (\r\n            <div className={revisarPresupuesto(budget, remaining)}>\r\n                Remaining: $ {this.props.remaining}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Remaining;","import React, { Component } from \"react\";\r\nimport Budget from \"./Budget\";\r\nimport Remaining from \"./Remaining\";\r\n\r\nclass BudgetControl extends Component {\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Budget\r\n                    budget={this.props.budget}\r\n                />\r\n                <Remaining\r\n                    budget={this.props.budget}\r\n                    remaining={this.props.remaining}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BudgetControl;","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport List from './components/List';\nimport Form from './components/Form';\nimport BudgetControl from './components/BudgetControl';\nimport './css/App.css';\nimport {validarPresupuesto} from \"./helper\";\n\nclass App extends Component {\n\n  state = {\n    budget: '',\n    remaining: '',\n    expenses: {}\n  };\n\n\n  obtenerPresupuesto = () => {\n    let budget = prompt(\"¿Cuál es el presupuesto?\");\n    let result = validarPresupuesto(budget);\n    if(result){\n      this.setState({ budget , remaining : budget});\n    } else {\n      this.obtenerPresupuesto();\n    }\n  };\n\n  componentDidMount() {\n    this.obtenerPresupuesto();\n  }\n\n  //Adds a new expense to state\n  addExpense = expense => {\n    //Take a copy of the actual state\n    const expenses = {...this.state.expenses};\n    //Add expense to the state copy\n    expenses[`gasto${Date.now()}`] = expense;\n    //getRemaining\n    this.getRemaining(expense.quantity);\n    //Put it on state\n    this.setState({\n        expenses\n    });\n  };\n\n  //Substract from the budget when any expense is saved\n  getRemaining = (quantity) => {\n    //Read expense\n    let num = Number(quantity);\n\n    //Copy state\n    let total = this.state.remaining;\n\n    //calc\n    total -= num;\n    this.setState({ remaining: total })\n  };\n\n  render() {\n    return (\n        <div className=\"App container\">\n          <Header titulo=\"Gasto semanal\"/>\n          <div className=\"contenido-principal contenido\">\n            <div className=\"row\">\n              <div className=\"one-half column\">\n                <Form addExpense={this.addExpense}/>\n              </div>\n              <div className=\"one-half column\">\n                <List expenses={this.state.expenses}/>\n                <BudgetControl\n                    budget = {this.state.budget}\n                    remaining = {this.state.remaining}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}